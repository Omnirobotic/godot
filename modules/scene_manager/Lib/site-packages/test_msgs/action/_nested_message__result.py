# generated from rosidl_generator_py/resource/_srv.py.em
# generated code does not contain a copyright notice

import logging
import traceback


class Metaclass(type):
    """Metaclass of message 'NestedMessage_Result'."""

    _TYPE_SUPPORT = None

    @classmethod
    def __import_type_support__(cls):
        try:
            from rosidl_generator_py import import_type_support
            module = import_type_support('test_msgs')
        except ImportError:
            logger = logging.getLogger('rosidl_generator_py.NestedMessage_Result')
            logger.debug(
                'Failed to import needed modules for type support:\n' + traceback.format_exc())
        else:
            cls._TYPE_SUPPORT = module.type_support_srv__action_nested_message__result
            from test_msgs.action import _nested_message__result__request
            if _nested_message__result__request.Metaclass._TYPE_SUPPORT is None:
                _nested_message__result__request.Metaclass.__import_type_support__()
            from test_msgs.action import _nested_message__result__response
            if _nested_message__result__response.Metaclass._TYPE_SUPPORT is None:
                _nested_message__result__response.Metaclass.__import_type_support__()


class NestedMessage_Result(metaclass=Metaclass):
    from test_msgs.action._nested_message__result__request import NestedMessage_Result_Request as Request
    from test_msgs.action._nested_message__result__response import NestedMessage_Result_Response as Response

    def __init__(self):
        raise NotImplementedError('Service classes can not be instantiated')
