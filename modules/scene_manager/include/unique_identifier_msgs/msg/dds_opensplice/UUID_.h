//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: UUID_.h
//  Source: unique_identifier_msgs\msg\dds_opensplice\UUID_.idl
//  Generated: timestamp removed to make the build reproducible
//  OpenSplice 6.9.190403OSS
//  
//******************************************************************
#ifndef _UUID__H_
#define _UUID__H_

#include "sacpp_mapping.h"
#include "unique_identifier_msgs/msg/rosidl_typesupport_opensplice_cpp__visibility_control.h"


namespace unique_identifier_msgs
{
   namespace msg
   {
      namespace dds_
      {
         struct UUID_;
         typedef DDS::Octet unique_identifier_msgs__UUID__octet_array_16_slice;
         typedef DDS::Octet unique_identifier_msgs__UUID__octet_array_16[16];
         typedef unique_identifier_msgs__UUID__octet_array_16 unique_identifier_msgs__UUID__octet_array_16_out;
         ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_unique_identifier_msgs extern unique_identifier_msgs__UUID__octet_array_16_slice * unique_identifier_msgs__UUID__octet_array_16_alloc ();
         ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_unique_identifier_msgs extern void unique_identifier_msgs__UUID__octet_array_16_free (unique_identifier_msgs__UUID__octet_array_16_slice *);
         ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_unique_identifier_msgs extern void unique_identifier_msgs__UUID__octet_array_16_copy (unique_identifier_msgs__UUID__octet_array_16_slice* to, const unique_identifier_msgs__UUID__octet_array_16_slice* from);
         ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_unique_identifier_msgs extern unique_identifier_msgs__UUID__octet_array_16_slice *unique_identifier_msgs__UUID__octet_array_16_dup (const unique_identifier_msgs__UUID__octet_array_16_slice* from);

         struct unique_identifier_msgs__UUID__octet_array_16_uniq_ {};
         typedef DDS_DCPS_FArray_var< unique_identifier_msgs__UUID__octet_array_16, unique_identifier_msgs__UUID__octet_array_16_slice, struct unique_identifier_msgs__UUID__octet_array_16_uniq_> unique_identifier_msgs__UUID__octet_array_16_var;
         typedef DDS_DCPS_Array_forany< unique_identifier_msgs__UUID__octet_array_16, unique_identifier_msgs__UUID__octet_array_16_slice, struct unique_identifier_msgs__UUID__octet_array_16_uniq_> unique_identifier_msgs__UUID__octet_array_16_forany;

         struct ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_unique_identifier_msgs UUID_
         {
               unique_identifier_msgs__UUID__octet_array_16 uuid_;
         };

         typedef DDS_DCPSStruct_var < UUID_> UUID__var;
         typedef UUID_&UUID__out;
      }
   }
}
template <>
unique_identifier_msgs::msg::dds_::unique_identifier_msgs__UUID__octet_array_16_slice* DDS_DCPS_ArrayHelper < unique_identifier_msgs::msg::dds_::unique_identifier_msgs__UUID__octet_array_16, unique_identifier_msgs::msg::dds_::unique_identifier_msgs__UUID__octet_array_16_slice, unique_identifier_msgs::msg::dds_::unique_identifier_msgs__UUID__octet_array_16_uniq_>::alloc ();
template <>
void DDS_DCPS_ArrayHelper < unique_identifier_msgs::msg::dds_::unique_identifier_msgs__UUID__octet_array_16, unique_identifier_msgs::msg::dds_::unique_identifier_msgs__UUID__octet_array_16_slice, unique_identifier_msgs::msg::dds_::unique_identifier_msgs__UUID__octet_array_16_uniq_>::copy (unique_identifier_msgs::msg::dds_::unique_identifier_msgs__UUID__octet_array_16_slice *to, const unique_identifier_msgs::msg::dds_::unique_identifier_msgs__UUID__octet_array_16_slice* from);
template <>
void DDS_DCPS_ArrayHelper < unique_identifier_msgs::msg::dds_::unique_identifier_msgs__UUID__octet_array_16, unique_identifier_msgs::msg::dds_::unique_identifier_msgs__UUID__octet_array_16_slice, unique_identifier_msgs::msg::dds_::unique_identifier_msgs__UUID__octet_array_16_uniq_>::free (unique_identifier_msgs::msg::dds_::unique_identifier_msgs__UUID__octet_array_16_slice *ptr);




#endif
